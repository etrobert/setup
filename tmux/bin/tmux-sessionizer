#!/bin/sh

# Inspired by https://github.com/ThePrimeagen/.dotfiles/blob/master/bin/.local/scripts/tmux-sessionizer

if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
  echo "Usage: tmux-sessionizer [OPTIONS] [PROJECT_NAME]"
  echo ""
  echo "Create or switch to tmux sessions for projects."
  echo ""
  echo "OPTIONS:"
  echo "  -e, --existing    Show only existing tmux sessions"
  echo "  -h, --help        Show this help message"
  echo ""
  echo "If no PROJECT_NAME is provided, shows a fuzzy finder with:"
  echo "  - Projects from ~/work/"
  echo "  - setup (this dotfiles repository)"
  echo ""
  echo "If PROJECT_NAME is provided, creates/switches to that session directly."
  exit 0
elif [ "$1" = "-e" ] || [ "$1" = "--existing" ]; then
  project=$(tmux list-sessions -F "#{session_name}" 2>/dev/null | fzf)
elif [ $# -eq 1 ]; then
  project=$(echo "$1" | sed 's/\/$//')
else
  project=$({
    find "$HOME/work" -mindepth 1 -maxdepth 1 -type d -exec basename {} \;
    echo "setup"
  } | fzf)
fi

if [ -z "$project" ]; then
  exit 0
fi

if [ "$project" = "setup" ]; then
  project_path=$HOME/setup
else
  project_path=$HOME/work/$project
fi

project=$(echo "$project" | sed 's/\./_/g')

if ! tmux has-session -t="$project" 2>/dev/null; then
  tmux new-session -d -s "$project" -c "$project_path"
fi

if [ -z "$TMUX" ]; then
  tmux attach-session -t "$project"
else
  tmux switch-client -t "$project"
fi
